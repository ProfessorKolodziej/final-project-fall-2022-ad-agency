{"version":3,"file":"main.fa51e1466aa6eecd1bd9.js","mappings":";sQACA,svNADA,IAAMA,EAAM,+EAENC,EAAOC,SAASC,cAAc,SAChCC,EAAa,KAEjB,SAASC,EAAUC,GAIlB,IAHA,IAAIC,EAAS,KAGJC,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAEhCD,GAAU,wCAAJ,OACsBD,EAAKE,GAAGE,MAAM,GAAGV,IAAG,wBACzCM,EAAKE,GAAG,eAAc,+CACHF,EAAKE,GAAGG,UAAS,uBAI5CV,EAAKW,UAAYL,CAClB,CAIA,SAASM,IACRR,EAAUD,EACX,CAeA,aALC,OAKD,cAZA,8FACOU,MAAMd,EAAK,CAAEe,QAAS,CAAEC,cAAe,4CAC3CC,MAAK,SAACC,GAAQ,OAAKA,EAASC,MAAM,IAClCF,MAAK,SAACX,GACNF,EAAaE,EAAKc,QAClBP,GACD,IAAE,4CACH,sBAMD,IAMMQ,EAAoBnB,SAASC,cAAc,gBACvB,OAAtBkB,GACHA,EAAkBC,iBAAiB,SARhB,WAGnBjB,EAFiBD,EAAWmB,QAAO,SAACC,GAAI,OAAKA,EAAKb,UAAUc,SAAS,SAAS,IAG/E,IAlBA,WACsB,wBAyBtBC","sources":["webpack:///./js/scripts.js"],"sourcesContent":["const url = 'https://api.baserow.io/api/database/rows/table/115440/?user_field_names=true';\n\nconst list = document.querySelector('#list');\nlet storedData = null;\n\nfunction buildHTML(data) {\n\tlet markup = null;\n\n\t// eslint-disable-next-line\n\tfor (let i = 0; i < data.length; i++) {\n\t\t// console.log(data[i]);\n\t\tmarkup += `<li>\n\t\t\t<img class=\"Logos\" src = ${data[i].Logos[0].url}>\n\t\t\t<h2>${data[i]['Agency Name']}</h2>\n\t\t\t<div class=\"Locations\">${data[i].Locations}</div>\n\t\t\t</li>`;\n\t}\n\n\tlist.innerHTML = markup;\n}\n\n// This is good if you want to add a reset button.\n// Add the button the same way as buildBoston is added.\nfunction buildAll() {\n\tbuildHTML(storedData);\n}\n\n// This gets the initial dataset and builds the results with it.\nasync function getData() {\n\tawait fetch(url, { headers: { Authorization: 'Token woLMVJy43hZwBu44UBVYVabQyulxwTOw' } })\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tstoredData = data.results;\n\t\t\tbuildAll(storedData);\n\t\t});\n}\n\n// This builds the list using the Boston filter.\n// It's another way of writing a function - same as line 24.\n// You can use either style, whichever you like best.\n// This is more modern, but it can be confusing when you're learning.\nconst buildBoston = () => {\n\tconst filtered = storedData.filter((item) => item.Locations.includes('Boston'));\n\t// console.log(filtered);\n\tbuildHTML(filtered);\n};\n\nconst buildBostonButton = document.querySelector('#buildBoston');\nif (buildBostonButton !== null) {\n\tbuildBostonButton.addEventListener('click', buildBoston);\n}\n\n// Build the initial list when the page loads.\ngetData();\n"],"names":["url","list","document","querySelector","storedData","buildHTML","data","markup","i","length","Logos","Locations","innerHTML","buildAll","fetch","headers","Authorization","then","response","json","results","buildBostonButton","addEventListener","filter","item","includes","getData"],"sourceRoot":""}